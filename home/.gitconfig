[user]
  email = yut23@gvljohnsons.com
  name = yut23
[merge]
  tool = meld
[color]
  ui = auto
  ui = true
  status = true
[core]
  fileMode = false
  excludesfile = ~/.gitignore_global
	autocrlf = false
  editor = gvim -f
[push]
  default = upstream
[alias]
  # Aliases from https://github.com/durdn/cfg
  st = status

  cl = clone

  ci = commit --verbose
  cma = commit -a -m
  ca = commit -a
  cv = commit -a -v
  caa = commit -a --amend -C HEAD
  filelog = log -u
  fl = log -u

  ai = add --interactive

  co = checkout
  br = branch 
  #"!git branch -ra | grep -v done"
  bra = branch -ra
  #list commands
  le = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%C(red\\ bold)%d\\ %C(reset)%s%C(blue\\ bold)\\ [%cn]%C(reset)" --decorate --numstat
  ls1 = log --pretty=format:"%C(yellow)%h%C(red\\ bold)%d\\ %C(reset)%s%C(blue\\ bold)\\ [%cn]%C(reset)" --decorate
  lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%C(red\\ bold)%d\\ %C(reset)%s%C(blue\\ bold)\\ [%cn]%C(reset)" --decorate --date=short --graph
  ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%C(red\\ bold)%d\\ %C(reset)%s%C(blue\\ bold)\\ [%cn]%C(reset)" --decorate --date=relative
  lc  = "!f() { git ll "${1:-HEAD}"^.."${1:-HEAD}"; }; f"
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  #list all aliases
  la = "!git config -l | grep alias | cut -c 7-"
  diff = diff --word-diff
  d = diff --word-diff
  dc = diff --cached
  #list modified files in last commit
  dl = "!git ll -1"
  #diff last commit
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff -w "${1:-HEAD}"^.."${1:-HEAD}"; }; f"
  diffr  = "!f() { git diff "${1:-HEAD}"^.."${1:-HEAD}"; }; f"
  #difftool
  dt = difftool --word-diff

  #reset commands
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard

  #stash
  sl = stash list
  sa = stash apply
  ss = stash save

  cp = cherry-pick
  grep = grep -Ii
  gr = grep -Ii
  #grep from root folder
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

  #grep on filename
  f = "!git ls-files | grep -i"

  #rename branch tree to done-
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

  #assume aliases
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  #show assumed files
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  #unassume all the assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0

  #merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"

  #list remotes
  rem="!git config -l | grep remote.*url | tail -n +2"

  #apply patch from other local repo
  lap = "!f() { git --git-dir=$1 format-patch -k -1 --stdout $2 | git am -3 -k; }; f"

  #subtree add
  sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f" 
  # initial empty commit
  empty = "!git commit -am\"[empty] Initial commit\" --allow-empty"

  #add bitbucket remote
  ra = "!f() { git remote add $1 https://bitbucket.org/$2.git; }; f"

  # Github flow aliases from http://haacked.com/archive/2014/07/28/github-flow-aliases/
  up = !git pull --rebase --prune $@ && git submodule update --init --recursive
  cob = checkout -b
  ;cm = !git add -A && git commit -m
  cm = commit -m
  save = !git add -A && git commit -m 'SAVEPOINT'
  wip = !git add -u && git commit -m "WIP"
  undo = reset HEAD~1 --mixed
  amend = commit -a --amend
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
  bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
  unstage = reset HEAD --

  cmv = !git add -A && git commit -v
[advice]
  statusHints = false
[mergetool]
  keepBackup = false
[mergetool "meld"]
  path = /usr/bin/meld
[diff]
	tool = gvimdiff
[difftool]
	prompt = false
[gui]
	fontui = -family Cantarell -size 11 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"Source Code Pro\" -size 10 -weight normal -slant roman -underline 0 -overstrike 0
	tabsize = 4
